[project]
name = "futuramaapi"

[tool.poetry]
name = "futuramaapi"
version = "1.9.9"
description = "Inspired REST and GraphQL API based on TV show Futurama."
authors = ["Ivan Koldakov <ivan.koldakov@gmail.com>"]
readme = "README.md"

[project.urls]
Homepage = "https://futuramaapi.com"
Documentation = "https://futuramaapi.com/docs"
Repository = "https://github.com/koldakov/futuramaapi"
Issues = "https://github.com/koldakov/futuramaapi/issues"
Changelog = "https://github.com/koldakov/futuramaapi/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.12"
hypercorn = {extras = ["uvloop"], version = "^0.17.3"}
sqlalchemy = "^2.0.40"
pydantic-settings = "^2.9.0"
alembic = "^1.15.2"
pydantic = "^2.11.3"
fastapi-storages = "^0.3.0"
asyncpg = "^0.30.0"
pillow = "^11.2.1"
anyio = "^4.9.0"
pydash = "^8.0.5"
pyjwt = "^2.10.1"
fastapi-mail = "^1.4.2"
pyyaml = "^6.0.2"
python-multipart = "^0.0.20"
sentry-sdk = "^2.26.1"
greenlet = "^3.2.0"
httpx = "^0.28.1"
aiocache = "^0.12.3"
fastapi = "^0.118.0"
fastapi-pagination = "^0.14.2"
sse-starlette = "^3.0.2"
cryptography = "^46.0.2"
redis = "^6.4.0"
strawberry-graphql = "^0.282.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    ".venv",
    "venv",
]

fix = true
show-fixes = true
output-format = "full"

line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E",
    "F",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "S",
    "BLE",
    "B",
    "A",
    "C4",
    "DJ",
    "PL",
    "TCH",
    "RUF",
    "TID",
]
ignore = [
    "N818",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
# docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
# docstring-code-line-length = "dynamic"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.extend-per-file-ignores]
"test_*.py" = [
    "S101",
]

[tool.mypy]
python_version = "3.12"
follow_imports = "skip"
ignore_missing_imports = true
check_untyped_defs = true
files = [
    "futuramaapi",
    "tests",
]
